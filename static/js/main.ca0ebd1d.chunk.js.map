{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","fncHandleClick","id","value","className","onClick","Board","squares","isXTurn","gameWinner","squareBoardHandler","onSquareClick","e","target","cells","map","item","count","i","slice","Game","useState","Array","fill","history","setHistory","playerHistory","setPlayerHistory","comments","setComments","setIsXTurn","setGameWinner","fncHandleHistory","newHistory","newComment","newPlayerHistory","historyJSx","comment","length","index","newSquare","winner","sqr","lines","len","a","b","c","calculateWinner","comm","newTurn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca0ebd1d.chunk.js","sourcesContent":["const Square = ({ fncHandleClick, id, value }) => {\n  return (\n    <button id={id} className='square' onClick={fncHandleClick}>\n      {value}\n    </button>\n  );\n};\n\nexport default Square;\n","import Square from './Square';\n\nconst Board = ({ squares, isXTurn, gameWinner, squareBoardHandler }) => {\n  const onSquareClick = (e) => {\n    squareBoardHandler(e.target.id);\n  };\n\n  const renderSquare = (i) => {\n    return (\n      <Square\n        id={i + 1}\n        value={squares[i]}\n        key={i}\n        fncHandleClick={onSquareClick}\n      />\n    );\n  };\n\n  const cells = squares.map((item, count) => {\n    return renderSquare(count);\n  });\n\n  return (\n    <div className='board'>\n      <div className='winner'> {`Winner: ${gameWinner}`} </div>\n      <div className='status'> {`Next player ${isXTurn}`} </div>\n      <div className='board-row'> {cells.slice(0, 3)} </div>\n      <div className='board-row'> {cells.slice(3, 6)} </div>\n      <div className='board-row'> {cells.slice(6)} </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import Board from './Board';\nimport { useState } from 'react';\n\nconst Game = () => {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [playerHistory, setPlayerHistory] = useState(['X']);\n\n  const [comments, setComments] = useState(['Start...']);\n\n  const [isXTurn, setIsXTurn] = useState(true);\n  const [gameWinner, setGameWinner] = useState('');\n\n  const calculateWinner = (sqr) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    let len = lines.length;\n\n    for (let i = 0; i < len; i++) {\n      const [a, b, c] = lines[i];\n      if (sqr[a] && sqr[a] === sqr[b] && sqr[a] === sqr[c]) {\n        //setWinner(sqr[a]);\n        return sqr[a];\n      }\n    }\n    return null;\n  };\n\n  const onSquareClick = (id) => {\n    let index = id - 1;\n    let squares = history[history.length - 1];\n    if (squares[index] !== null) return;\n\n    if (gameWinner) return;\n\n    let newSquare = [...squares];\n\n    newSquare[index] = isXTurn ? 'X' : 'O';\n\n    let winner = calculateWinner(newSquare);\n\n    const comm = `Player ${isXTurn ? 'X' : 'O'} sets cell ${id}`;\n\n    let newHistory = [...history, newSquare];\n    setHistory(newHistory);\n\n    let newComment = [...comments, comm];\n    setComments(newComment);\n\n    if (winner) {\n      setGameWinner(winner);\n    } else {\n      let newTurn = !isXTurn;\n\n      setIsXTurn(newTurn);\n\n      let newPlayerHistory = [...playerHistory, newTurn ? 'X' : 'O'];\n\n      setPlayerHistory(newPlayerHistory);\n    }\n  };\n\n  const fncHandleHistory = (e) => {\n    let id = e.target.id;\n    if (id === '0') {\n      setHistory([Array(9).fill(null)]);\n      setComments(['Start...']);\n      setPlayerHistory(['X']);\n      return;\n    }\n\n    // slice the history and comment arrays to the id of the button clicked\n    let newHistory = history.slice(0, id);\n    setHistory(newHistory);\n\n    let newComment = comments.slice(0, id);\n    setComments(newComment);\n\n    let newPlayerHistory = playerHistory.slice(0, id);\n    setPlayerHistory(newPlayerHistory);\n  };\n  let historyJSx = comments.map((comment, count) => {\n    return (\n      <button id={count} key={count} onClick={fncHandleHistory}>\n        {comment}\n      </button>\n    );\n  });\n  return (\n    <>\n      <Board\n        squares={history[history.length - 1]}\n        squareBoardHandler={onSquareClick}\n        isXTurn={playerHistory[playerHistory.length - 1]}\n        gameWinner={gameWinner}\n      />\n      <div className='history'> {historyJSx} </div>\n    </>\n  );\n};\n\nexport default Game;\n","import './App.css';\nimport Game from './components/Game';\nfunction App() {\n  return (\n    <div className='App'>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}